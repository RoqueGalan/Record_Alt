@model RecordFCS_Alt.Models.Movimiento

@{
    ViewBag.PagName = "Manejar";
    ViewBag.CtrlName = "Obra";
    ViewBag.Title = @ViewBag.PagName + ViewBag.CtrlName;
}

<h3>
    @ViewBag.PagName
    <i class="text-muted">@ViewBag.CtrlName</i>
</h3>

<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@ViewBag.CtrlName</li>
    <li class="active">@ViewBag.PagName</li>
</ol>



@*<div class="form-group">

    @Html.LabelFor(model => model.FechaHoraMovimiento, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-8">
        <div class='input-group date' id='FechaHoraMovimientoDateTimePicker'>
            @Html.EditorFor(model => model.FechaHoraMovimiento, new { htmlAttributes = new { @class = "form-control", @readOnly = "" } })
            <span class="input-group-addon">
                <span class="fa fa-calendar"></span>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.FechaHoraMovimiento, "", new { @class = "text-danger" })
    </div>
</div>


<br /><br />



<script type="text/javascript">
    $(function () {
        var hoy = new Date();

        var mes = hoy.getMonth() + 1;
        var dia = hoy.getDate();

        var fechaLimite = hoy.getFullYear() + '/' +
            (mes < 10 ? '0' : '') + mes + '/' +
            (dia < 10 ? '0' : '') + dia;

        $('#FechaHoraMovimientoDateTimePicker').datetimepicker({
            defaultDate: "@Model.FechaHoraMovimiento",
            minDate: fechaLimite, //limitar que no se seleccione fechas pasadas a hoy
            format: "DD/MM/YYYY hh:mm A", //formato: dia/mes/año hora:minuto AM/PM
            //disabledDates: [
            //    moment("12/25/2013"),
            //    new Date(2013, 11 - 1, 21),
            //    "11/22/2013 00:53"
            //],
            toolbarPlacement: 'top',
            showTodayButton: true,
            showClose: true,
            ignoreReadonly: true,
            useCurrent: false //Important! See issue #1075

        });
    });
</script>*@


<div id="renderMovimiento">

    <h4><b>Selecciona la opción que deseas realizar:</b></h4>

    @using (Html.BeginForm("Crear", "Movimiento", FormMethod.Get, new { @Class = "formInicio form-center" }))
    {
        @Html.AntiForgeryToken()

        <h3 class="text-center">Nuevo Movimiento</h3>

        <div class="form-horizontal">

            <div class="form-group">

                @Html.Label("TipoMovimientoID", "Tipo de Movimiento", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-8">
                    <div class="input-group">
                        @*<span class="input-group-addon"><i class="fa fa-exchange"></i></span>*@
                        @Html.DropDownList("TipoMovimientoID", null, htmlAttributes: new { @class = "form-control" })

                        <span class="input-group-addon">
                            @*<input type="checkbox" id="HaciaExposicionInput" name="HaciaExposicionInput" data-toggle="tooltip" data-title="Hacia Exposición">*@
                            @Html.CheckBoxFor(model => model.HaciaExposicion, new { data_toggle = "tooltip", data_title = "Hacia Exposición" })
                        </span>


                        <button type="submit" class="input-group-addon btn btn-primary" data-toggle="tooltip" data-original-title="Nuevo Movimiento"><i class="fa fa-plus"></i> Generar </button>

                    </div>
                </div>
            </div>



        </div>
    }

    @using (Html.BeginForm("Editar", "Movimiento", FormMethod.Get, new { @Class = "formInicio form-center" }))
    {
        @Html.AntiForgeryToken()

        <h3 class="text-center">Consultar Movimiento</h3>


        <div class="form-horizontal">

            <div class="form-group">

                @Html.Label("MovimientoID", "No. de Movimiento", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-8">
                    <div class="input-group">
                        @Html.TextBox("MovimientoID", null, new { @Class = "form-control", type = "number" })

                        <button type="submit" class="input-group-addon btn btn-primary" data-toggle="tooltip" data-original-title="Buscar Movimiento"><i class="fa fa-search"></i> Buscar</button>
                    </div>
                </div>
            </div>



        </div>
    }



</div>


<script>
    $('form.formInicio').submit(function (e) {
        e.preventDefault();


        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {

                $('#renderMovimiento').html(result); //  Campo que actualizara

                $('#alertasDiv').load('/Base/_Alertas');
            }
        });
        return false;
    });
</script>

@section scripts {
    @*<script type="text/javascript">
            $(function () {
                $('#FechaHoraMovimiento').datetimepicker({
                    defaultDate: '@Model.FechaHoraMovimiento',
                    format: 'L',
                    showClose: true,
                    showClear: true,
                    toolbarPlacement: 'top'
                });

            });
        </script>*@
}



