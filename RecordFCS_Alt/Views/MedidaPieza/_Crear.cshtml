@model RecordFCS_Alt.Models.MedidaPieza

@{
    bool EsMultipleValor = ViewBag.EsMultipleValor;
    Guid AtributoID = ViewBag.AtributoID;
    string ParametrosHTML = ViewBag.ParametrosHTML;
    Guid TipoAtributoID = ViewBag.TipoAtributoID;
    string TipoInput = ViewBag.TipoInput;
    string NombreAtt = ViewBag.NombreAtt;
    SelectList ListaTipoMedidaID = (SelectList)ViewBag.TipoMedidaID;

    Guid id = ViewBag.id;


}

@{
    ViewBag.PagName = "Crear";
    ViewBag.CtrlName = "Médida";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" data-toggle="tooltip" title="Cerrar">&times;</button>
    <h4 class="modal-title" id="myModalLabel">
        <b>@ViewBag.PagName</b>
        <i class="text-muted">@ViewBag.CtrlName</i>
    </h4>
</div>


@using (Html.BeginForm("Crear", "MedidaPieza", FormMethod.Post, null))
{
    <div class="modal-body">

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.Temp)
            @Html.HiddenFor(model => model.PiezaID)
            @Html.Hidden("AtributoID", AtributoID)

            <div class="form-group">
                @Html.LabelFor(model => model.TipoMedidaID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TipoMedidaID", null, "- Elije una opción -", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.TipoMedidaID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Anchura, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Anchura, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Anchura, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Profundidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Profundidad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Profundidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Diametro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Diametro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Diametro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Diametro2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Diametro2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Diametro2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UMLongitud, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.UMLongitud, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UMLongitud, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UMMasa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.UMMasa, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UMMasa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Otra, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Otra, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Otra, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>


    </div>


    <div class="modal-footer">
        <button class="btn" type="button" data-dismiss="modal">Cancelar</button>
        <input class="btn btn-primary" type="submit" value="Guardar" />
    </div>

}

