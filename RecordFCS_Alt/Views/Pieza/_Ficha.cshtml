@using RecordFCS_Alt.Models
@model RecordFCS_Alt.Models.Pieza
@using RecordFCS_Alt.Helpers

@{
    bool esPrincipal = Model.TipoPieza.EsPrincipal;
    int Nuimagenes = Model.ImagenPiezas.Count;
    int Nuautores = Model.AutorPiezas.Count;
    int NuMedidas = Model.MedidaPiezas.Count;
    int NuTecnicas = Model.TecnicaPiezas.Count;

    bool esCompleta = ViewBag.esCompleta;
    string subFolio = Model.SubFolio;

    string tipoCarusel = ViewBag.tipoCarusel;

}


<li class="media">

    <div class="media-left media-middle">

        <div id="renderCarrusel_@Model.PiezaID" class="text-center">
            @{ Html.RenderAction("Carrusel", "ImagenPieza", new { id = Model.PiezaID, status = false, tipo = tipoCarusel, esCompleta = esCompleta }); }
        </div>
    </div>


    <div class="media-body clearfix">
        @if (!esCompleta)
        {
            <h4 class="media-heading pull-right">@(Model.Obra.LetraFolio.Nombre + Model.Obra.NumeroFolio)</h4>
        }
        else
        {
            if (!Model.TipoPieza.EsPrincipal)
            {
                <h4 class="media-heading pull-right">@(Model.ImprimirFolio())</h4>
            }
        }
        <table class="table table-hover">
            <thead>
                <tr>
                    <th class="col-lg-3 col-md-5 col-sm-5"></th>
                    <th>
                        @if (!esCompleta)
                        {
                            if (User.IsInRole("verFichComp"))
                            {
                                <a href="@Url.Action("Detalles", "Obra", new  {id = Model.ObraID })" class="btn btn-primary btn-xs pull-right" data-toggle="tooltip" title="Abrir Ficha Completa" target="_blank"><span class='fa fa-external-link'></span></a>
                            }
                        }
                        else
                        {
                            //boton eliminar
                            if (Model.TipoPieza.EsPrincipal)
                            {
                                if (User.IsInRole("oDel"))
                                {
                                    @Html.NoEncodeActionLink("<span class='fa fa-trash'></span>", "Eliminar toda la Obra", "Eliminar", "Obra", routeValues: new { id = Model.ObraID }, htmlAttributes: new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-danger btn-xs pull-right ModalObraEliminar" })
                                }
                            }
                            else
                            {
                                if (User.IsInRole("pDel"))
                                {
                                    @Html.NoEncodeActionLink("<span class='fa fa-trash'></span>", "Eliminar " + Model.ImprimirFolio(), "Eliminar", "Pieza", routeValues: new { id = Model.PiezaID }, htmlAttributes: new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-danger btn-xs pull-right CrearPieza" })
                                }
                            }
                            

                            if (Model.TipoPieza.TipoPiezasHijas.Count > 0 && User.IsInRole("pNew"))
                            {

                                <div class="btn-group pull-right">
                                    <button class="btn btn-success btn-xs dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class='fa fa-plus'></span> <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li class="dropdown-header">Selecciona el tipo de pieza que desea agregar</li>
                                        @foreach (var item in Model.TipoPieza.TipoPiezasHijas)
                                        {
                                            <li>
                                                @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/> " + item.Nombre, "Crear pieza del tipo " + item.Nombre, "Crear", "Pieza", new { id = Model.PiezaID, TipoPiezaID = item.TipoPiezaID }, new { data_modal = "", data_toggle = "tooltip", @class = "CrearPieza" })
                                            </li>

                                        }
                                    </ul>
                                </div>
                            }
                            
                        }
                    </th>
                </tr>

            </thead>

            <tbody>

                     <tr>
                            <td>
                                <p>
                                    <b>Tipo de @(esPrincipal ? "Obra": "Pieza")</b>
                                </p>
                            </td>

                            <td>
                                <p>@(esPrincipal? Model.Obra.TipoObra.Nombre : Model.TipoPieza.Nombre)</p>
                            </td>
                        </tr>



                @foreach (var att in (List<Atributo>)ViewBag.listaAttributosFichaCompleta)
                {
                    var tipoAtt = att.TipoAtributo;

                    if (tipoAtt.EsGenerico)
                    {
                        var lista_AttPieza = Model.AtributoPiezas.Where(a => a.Atributo == att).ToList();
                        var color = lista_AttPieza.Count > 0 ? "default" : "";

                        <tr class="@color">
                            <td>
                                <p>
                                    <b>@att.NombreAlterno</b>

                                    @if (tipoAtt.EsMultipleValor)
                                    {
                                        if (User.IsInRole("attPNew") && esCompleta)
                                        {
                                            @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })
                                        }
                                    }
                                </p>
                            </td>

                            <td>
                                @if (color == "default")
                                {
                                    foreach (var item in lista_AttPieza)
                                    {
                                        <p class="hover-dorado">
                                            @if (User.IsInRole("attPEdit") && esCompleta)
                                            {
                                                @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = item.AtributoID, LlaveID = item.AtributoPiezaID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                            }

                                            <span id="valor_@item.AtributoPiezaID">
                                                @if (tipoAtt.EsLista)
                                                {
                                                    @item.ListaValor.Valor
                                                }
                                                else
                                                {


                                                    if (tipoAtt.DatoCS == "link")
                                                    {
                                                        <a href="@item.Valor" class="btn btn-primary btn-sm" data-toggle="tooltip" title="Abrir enlace" target="_blank">Abrir @att.NombreAlterno <i class="fa fa-external-link-square"></i></a>

                                                    }
                                                    else
                                                    {
                                                        @item.Valor
                                                    }
                                                }
                                            </span>
                                        </p>
                                    }
                                }
                                else
                                {
                                    if (!tipoAtt.EsMultipleValor)
                                    {
                                        if (User.IsInRole("attPNew") && esCompleta)
                                        {
                                            @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs pull-right CrearValor" })

                                        }
                                    }
                                }
                            </td>
                        </tr>

                    }
                    else
                    {
                        string color = "";
                        switch (tipoAtt.TablaSQL)
                        {
                            case "Autor":
                                {
                                    //multiple
                                    var lista_AttAutor = Model.AutorPiezas.Where(a => a.Status).OrderByDescending(a => a.esPrincipal).ThenBy(a => a.Prefijo).ThenBy(a => a.Autor.Nombre).ToList();
                                    color = lista_AttAutor.Count > 0 ? "default" : "";
                                    <tr class="@color">
                                        <td>
                                            <b>@att.NombreAlterno</b>
                                            @if (User.IsInRole("attPNew") && esCompleta)
                                            {
                                                @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoID = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })
                                            }

                                        </td>
                                        <td>
                                            @if (color == "default")
                                            {
                                                foreach (var item in lista_AttAutor)
                                                {
                                                    <p class="hover-dorado">
                                                        @if (User.IsInRole("attPEdit") && esCompleta)
                                                        {
                                                            @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = att.AtributoID, LlaveID = item.AutorID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                                        }

                                                        <span id="autor_@(item.PiezaID)_@(item.AutorID)">

                                                            <span><b>@(item.Prefijo == "" || item.Prefijo == null ? "" : item.Prefijo + ": ")</b></span>
                                                            @(item.Autor.Nombre + " " + item.Autor.Apellido)
                                                        </span>
                                                    </p>
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                                break;
                            case "Ubicacion":
                                {
                                    color = Model.UbicacionID != null ? "default" : "";
                                    <tr class="@color">
                                        <td>
                                            <b>@att.NombreAlterno</b>
                                        </td>
                                        <td>
                                            @if (color == "default")
                                            {
                                                <p id="ubicacion_@(Model.PiezaID)_@(Model.UbicacionID)" class="hover-dorado">
                                                    @if (User.IsInRole("attUbiEdit") && esCompleta)
                                                    {
                                                        @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID, LlaveID = Model.UbicacionID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs pull-right CrearValor" })

                                                    }
                                                    @Model.Ubicacion.Nombre
                                                </p>
                                            }
                                            else
                                            {
                                                if (User.IsInRole("attUbiEdit") && esCompleta)
                                                {
                                                    @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs pull-right CrearValor" })

                                                }
                                            }
                                        </td>
                                    </tr>
                                }

                                break;
                            case "TipoTecnica":
                                //multiple
                                var lista_Tecnicas = Model.TecnicaPiezas.Where(a => a.Status).OrderBy(a => a.TipoTecnica.Nombre).ToList();
                                color = lista_Tecnicas.Count > 0 ? "default" : "";
                                <tr class="@color">
                                    <td>
                                        <b>@att.NombreAlterno</b>
                                        @if (User.IsInRole("attPNew") && esCompleta)
                                        {
                                            @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoID = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })
                                        }

                                    </td>
                                    <td>
                                        @if (color == "default")
                                        {
                                            foreach (var item in lista_Tecnicas)
                                            {
                                                <p class="hover-dorado">
                                                    @if (User.IsInRole("attPEdit") && esCompleta)
                                                    {
                                                        @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = att.AtributoID, LlaveID = item.TipoTecnicaID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                                    }

                                                    <span id="tipoTecnica_@(item.PiezaID)_@(item.TipoTecnicaID)">
                                                        <span><b>@(item.TipoTecnica.Nombre): </b></span>
                                                        @item.Tecnica.Descripcion
                                                    </span>
                                                </p>
                                            }
                                        }
                                    </td>
                                </tr>
                                        break;

                            case "TipoMedida":
                                        //multimple
                                        var lista_Medidas = Model.MedidaPiezas.Where(a => a.Status).OrderBy(a => a.TipoMedida.Nombre).ToList();
                                        color = lista_Medidas.Count > 0 ? "default" : "";
                                        <tr class="@color">
                                            <td>
                                                <b>@att.NombreAlterno</b>
                                                @if (User.IsInRole("attPNew") && esCompleta)
                                                {
                                                    @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoID = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })
                                                }

                                            </td>
                                            <td>
                                                @if (color == "default")
                                                {
                                                    foreach (var item in lista_Medidas)
                                                    {

                                                        string medidaTexto = "";
                                                        bool existe0 = false;
                                                        bool existe1 = false;

                                                        //1x
                                                        existe0 = item.Altura.HasValue ? true : false;
                                                        existe1 = item.Anchura.HasValue ? true : false;

                                                        medidaTexto += existe0 ? item.Altura.ToString() : "";
                                                        medidaTexto += existe0 && existe1 ? "x" : "";
                                                        existe0 = existe1;
                                                        existe1 = item.Profundidad.HasValue ? true : false;

                                                        //2x
                                                        medidaTexto += medidaTexto.EndsWith("x") ? "" : medidaTexto.Length > 0 && existe0 ? "x" : "";
                                                        medidaTexto += existe0 ? item.Anchura.ToString() : "";
                                                        medidaTexto += existe0 && existe1 ? "x" : "";
                                                        existe0 = existe1;
                                                        existe1 = item.Diametro.HasValue ? true : false;

                                                        //3x
                                                        medidaTexto += medidaTexto.EndsWith("x") ? "" : medidaTexto.Length > 0 && existe0 ? "x" : "";
                                                        medidaTexto += existe0 ? item.Profundidad.ToString() : "";
                                                        medidaTexto += existe0 && existe1 ? "x" : "";
                                                        existe0 = existe1;
                                                        existe1 = item.Diametro2.HasValue ? true : false;

                                                        //4Øx
                                                        medidaTexto += medidaTexto.EndsWith("x") ? "" : medidaTexto.Length > 0 && existe0 ? "x" : "";
                                                        medidaTexto += existe0 ? item.Diametro.ToString() + "Ø" : "";
                                                        medidaTexto += existe0 && existe1 ? "x" : "";
                                                        existe0 = existe1;
                                                        existe1 = item.UMLongitud.HasValue ? true : false;

                                                        //cm
                                                        medidaTexto += medidaTexto.EndsWith("x") ? "" : medidaTexto.Length > 0 && existe0 ? "x" : "";
                                                        medidaTexto += existe0 ? item.Diametro2.ToString() + "Ø" : "";
                                                        medidaTexto += existe1 && medidaTexto.Length > 0 ? item.UMLongitud.ToString() + " " : " ";
                                                        existe0 = item.Peso.HasValue ? true : false;

                                                        //6
                                                        medidaTexto += medidaTexto.EndsWith(" ") && existe0 ? item.Peso.ToString() + item.UMMasa : "";
                                                        existe0 = item.Otra == null || item.Otra == "" ? false : true;

                                                        //otra
                                                        medidaTexto += existe0 ? medidaTexto.Length > 0 ? ", " + item.Otra : item.Otra : "";

                                                        <p class="hover-dorado">
                                                            @if (User.IsInRole("attPEdit") && esCompleta)
                                                            {
                                                                @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = att.AtributoID, LlaveID = item.TipoMedidaID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                                            }

                                                            <span id="tipoMedida_@(item.PiezaID)_@(item.TipoMedidaID)">
                                                                <span><b>@(item.TipoMedida.Nombre): </b></span>
                                                                @medidaTexto
                                                            </span>
                                                        </p>
                                                    }
                                                }
                                            </td>
                                        </tr>
                                                break;
                            case "ImagenPieza":
                                                break;
                            default:
                            <tr>
                                <td><b>@att.NombreAlterno</b></td>
                                <td>
                                    <span><b class="text-danger">Sin implementar</b> (Verificar con administrador)</span>
                                </td>
                            </tr>
                                                break;
                        }

                    }
                }




            </tbody>

        </table>

    </div>




</li>

@if (esCompleta)
{
    foreach (var item in Model.PiezasHijas)
    {
        <hr class="col-lg-offset-0" />
        <div class="col-lg-offset-05">
            @{Html.RenderAction("Ficha", "Pieza", new { id = item.PiezaID, tipo = "Completa" });}
        </div>

    }
}



@if (Model.TipoPieza.EsPrincipal)
{
    <script src="~/Scripts/add.toolTip.js"></script>

    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $("a[data-modal].EditarValor").on("click", function (e) {

                $('#miModalContenido').load(this.href, function () {
                    $('#miModal').modal({
                        backdrop: 'static',
                        keyboard: true
                    }, 'show');
                    bindForm_EditarValor(this);
                });
                return false;
            });
        });

        function bindForm_EditarValor(dialog) {
            $('form', dialog).submit(function (e) {


                var validarok = false;


                validarok = $(this).validate().valid();

                if (validarok) {
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            if (result.success) {
                                $('#miModal').modal('hide');

                                /*
                                renderid = el id de donde vamos a renderizar el valor
                                valor
                                */
                                if (result.guardar) {

                                    if ($('#' + result.renderID).length) {

                                        switch (result.tipo) {
                                            case "Autor":
                                                window.location.reload();
                                                break;
                                            default:
                                                $('#' + result.renderID).html(result.texto); //  Campo que actualizara
                                                break;

                                        }


                                        //$('<a>', {
                                        //    text: "<span class='fa fa-pencil'><span/>",
                                        //    href: result.url,
                                        //    'data-modal': "",
                                        //    'data-toggle': "tooltip",
                                        //    'class': 'btn btn-default btn-xs  pull-right EditarValor'
                                        //}).appendTo('#' + result.renderID);



                                    }
                                    else {
                                        window.location.reload();
                                    }
                                }


                                //$('#alertasDiv').load('/base/_alertas');

                            } else {
                                $('#miModalContenido').html(result);
                                bindForm_EditarValor(dialog);
                            }
                        }
                    });
                }
                return false;
            });
        }

    </script>


    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $("a[data-modal].CrearValor").on("click", function (e) {

                $('#miModalContenido').load(this.href, function () {
                    $('#miModal').modal({
                        backdrop: 'static',
                        keyboard: true
                    }, 'show');
                    bindForm_CrearValor(this);
                });
                return false;
            });
        });

        function bindForm_CrearValor(dialog) {
            $('form', dialog).submit(function (e) {


                var validarok = false;


                validarok = $(this).validate().valid();

                if (validarok) {
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            if (result.success) {

                                /*
                                renderid = el id de donde vamos a renderizar el valor
                                valor
                                */
                                if (result.guardar) {

                                    if ($('#' + result.renderID).length) {
                                        $('#' + result.renderID).html(result.texto); //  Campo que actualizara

                                        //$('<a>', {
                                        //    text: "<span class='fa fa-pencil'><span/>",
                                        //    href: result.url,
                                        //    'data-modal': "",
                                        //    'data-toggle': "tooltip",
                                        //    'class': 'btn btn-default btn-xs  pull-right EditarValor'
                                        //}).appendTo('#' + result.renderID);



                                    }
                                    else {
                                        window.location.reload();
                                        return false;
                                    }
                                }

                                $('#miModal').modal('hide');

                                $('#alertasDiv').load('/base/_alertas');



                            } else {
                                $('#miModalContenido').html(result);
                                bindForm_CrearValor(dialog);
                            }
                        }
                    });
                }
                return false;
            });
        }

    </script>

    <script type="text/javascript">
        $(function () {
            $.ajaxSetup({ cache: false });
            $("a[data-modal].CrearPieza").on("click", function (e) {

                $('#miModalContenido2').load(this.href, function () {
                    $('#miModal2').modal({
                        backdrop: 'static',
                        keyboard: true
                    }, 'show');
                    bindForm_CrearPieza(this);
                });
                return false;
            });

            function bindForm_CrearPieza(dialog) {
                $('form', dialog).submit(function (e) {

                    $.ajaxSetup({ cache: false });
                    event.preventDefault();


                    var formData = new FormData($(this)[0]);

                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: formData,
                        async: false,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            if (result.success) {

                                window.location.reload();

                            } else {
                                $('#miModal2').modal('hide');

                            }
                        },
                        error: function () {
                            alert("Ocurrio un error en el envio");
                        }
                    });

                    formData = null;

                    return false;
                });
            }
        });

    </script>




    //ModalObraEliminar
    <script type="text/javascript">
        $(function () {
            $.ajaxSetup({ cache: false });
            $("a[data-modal].ModalObraEliminar").on("click", function (e) {

                $('#miModalContenido').load(this.href, function () {
                    $('#miModal').modal({
                        backdrop: 'static',
                        keyboard: true
                    }, 'show');
                    bindForm_ObraEliminar(this);
                });
                return false;
            });

            function bindForm_ObraEliminar(dialog) {
                $('form', dialog).submit(function (e) {

                    $.ajaxSetup({ cache: false });
                    event.preventDefault();

                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            if (result.success) {

                                window.location.href = '@Url.Action("Index","Home",null)';

                            } else {
                                $('#miModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert("Ocurrio un error en el envio");
                        }
                    });

                    return false;
                });
            }
        });

    </script>


    
    
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}