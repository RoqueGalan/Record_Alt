@using RecordFCS_Alt.Models
@model RecordFCS_Alt.Models.Pieza
@using RecordFCS_Alt.Helpers

@{

    bool principal = Model.TipoPieza.EsPrincipal;
    int Nuimagenes = Model.ImagenPiezas.Count;
    int Nuautores = Model.AutorPiezas.Count;
    int NuMedidas = Model.MedidaPiezas.Count;
    int NuTecnicas = Model.TecnicaPiezas.Count;

    string subFolio = Model.SubFolio;
}


<li class="media">

    <div class="media-left media-middle">
        <div class="thumbnail">
            @*<img class="media-object img-responsive" src="~/Content/img/pieza/thumb/e0dbc2e2-dddc-42b0-b0f0-819d35530bbe.jpg" />*@

            <div id="renderCarrusel_@Model.PiezaID" class="text-center">
                @{ Html.RenderAction("Carrusel", "ImagenPieza", new { id = Model.PiezaID, status = false, tipo = "thumb" }); }
            </div>
        </div>
    </div>


    <div class="media-body clearfix">
        <h4 class="media-heading pull-right">@(Model.Obra.LetraFolio.Nombre + Model.Obra.NumeroFolio + "-" + subFolio)</h4>

        <table class="table table-hover">
            <thead>
                <tr>
                    <th class="col-lg-3 col-md-5 col-sm-5"></th>
                    <th>
                        <a href="@Url.Action("Detalles", "Obra", new  {id = Model.ObraID })" class="btn btn-primary btn-xs pull-right" data-toggle="tooltip" title="Abrir Ficha Completa" target="_blank"><span class='fa fa-pencil'></span></a>
                </tr>

            </thead>

            <tbody>

                @foreach (var att in (List<Atributo>)ViewBag.listaAttributosFichaCompleta)
                {
                    var tipoAtt = att.TipoAtributo;

                    if (tipoAtt.EsGenerico)
                    {
                        var lista_AttPieza = Model.AtributoPiezas.Where(a => a.Atributo == att).ToList();
                        var color = lista_AttPieza.Count > 0 ? "default" : "";

                        <tr class="@color">
                            <td>
                                <p>
                                    @att.NombreAlterno

                                    @if (tipoAtt.EsMultipleValor)
                                    {
                                        @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })
                                    }
                                </p>
                            </td>

                            <td>
                                @if (color == "default")
                                {
                                    foreach (var item in lista_AttPieza)
                                    {
                                        <p class="hover-dorado">
                                            @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = item.AtributoID, LlaveID = item.AtributoPiezaID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                            <span id="valor_@item.AtributoPiezaID">
                                                @if (tipoAtt.EsLista)
                                                {
                                                    @item.ListaValor.Valor
                                                }
                                                else
                                                {


                                                    if (tipoAtt.DatoCS == "link")
                                                    {
                                                        <a href="@item.Valor" class="btn btn-primary btn-sm" data-toggle="tooltip" title="Abrir enlace" target="_blank">Abrir @att.NombreAlterno <i class="fa fa-external-link-square"></i></a>

                                                    }
                                                    else
                                                    {
                                                        @item.Valor
                                                    }
                                                }
                                            </span>
                                        </p>
                                    }
                                }
                                else
                                {
                                    if (!tipoAtt.EsMultipleValor)
                                    {
                                        @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID, AtributoId = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs pull-right CrearValor" })
                                        

                                    }
                                }
                            </td>
                        </tr>

                    }
                    else
                    {
                        string color = "";
                        switch (tipoAtt.TablaSQL)
                        {
                            case "Autor":
                                {
                                    //multiple
                                    var lista_AttAutor = Model.AutorPiezas.Where(a => a.Status).OrderBy(a => a.Autor.Nombre).ToList();
                                    color = lista_AttAutor.Count > 0 ? "default" : "";
                                    <tr class="@color">
                                        <td>
                                            @att.NombreAlterno
                                            @Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = Model.PiezaID , AtributoID = att.AtributoID}, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-primary btn-xs  pull-right CrearValor" })

                                        </td>
                                        <td>
                                            @if (color == "default")
                                            {
                                                foreach (var item in lista_AttAutor)
                                                {
                                                    <p class="hover-dorado">
                                                        @Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, AtributoID = att.AtributoID, LlaveID = item.AutorID }, new { data_modal = "", data_toggle = "tooltip", @class = "btn btn-default btn-xs  pull-right EditarValor" })

                                                        <span id="autor_@(item.PiezaID)_@(item.AutorID)">
                                                            @(item.Autor.Nombre + " " + item.Autor.Apellido)
                                                        </span>
                                                    </p>
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                                break;
                            case "Ubicacion":
                                {
                                    color = Model.UbicacionID != null ? "default" : "";
                                    <tr class="@color">
                                        <td>
                                            @att.NombreAlterno
                                            @*@Html.NoEncodeActionLink("<span class='fa fa-plus'><span/>", "Agregar otr@ " + att.NombreAlterno, "Crear", "AtributoPieza", new { id = att.AtributoID }, new { data_modal = "", data_toggle = "tooltip", @class = "link link-success btn-xs  pull-right CrearValor" })*@
                                        </td>
                                        <td>
                                            @if (color == "default")
                                            {
                                                <p id="ubicacion_@(Model.UbicacionID)" class="hover-dorado">
                                                    @*@Html.NoEncodeActionLink("<span class='fa fa-pencil'><span/>", "Editar", "Editar", "AtributoPieza", new { id = item.PiezaID, autorID = item.AutorID }, new { data_modal = "", data_toggle = "tooltip", @class = "link link-success btn-xs  pull-right EditarAutor" })*@
                                                    @Model.Ubicacion.Nombre
                                                </p>
                                            }
                                        </td>
                                    </tr>
                                }

                                break;
                            case "TipoTecnica":
                            //multiple
                            case "TipoMedida":
                            //multimple
                            case "ImagenPieza":
                            default:
                            @*<tr>
                                    <td>@att.NombreAlterno</td>
                                    <td>Sin implementar</td>
                                </tr>*@
                                break;
                        }

                    }
                }




            </tbody>

        </table>

    </div>




</li>



<script src="~/Scripts/add.toolTip.js"></script>


<script type="text/javascript">

    $(function () {
        $.ajaxSetup({ cache: false });
        $("a[data-modal].EditarValor").on("click", function (e) {

            $('#miModalContenido').load(this.href, function () {
                $('#miModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                bindForm_EditarValor(this);
            });
            return false;
        });
    });

    function bindForm_EditarValor(dialog) {
        $('form', dialog).submit(function (e) {


            var validarok = false;


            validarok = $(this).validate().valid();

            if (validarok) {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('#miModal').modal('hide');

                            /*
                            renderid = el id de donde vamos a renderizar el valor
                            valor
                            */
                            if (result.guardar) {

                                if ($('#' + result.renderID).length) {
                                    $('#' + result.renderID).html(result.texto); //  Campo que actualizara

                                    //$('<a>', {
                                    //    text: "<span class='fa fa-pencil'><span/>",
                                    //    href: result.url,
                                    //    'data-modal': "",
                                    //    'data-toggle': "tooltip",
                                    //    'class': 'btn btn-default btn-xs  pull-right EditarValor'
                                    //}).appendTo('#' + result.renderID);



                                }
                                else {
                                    window.location.reload();
                                }
                            }


                            $('#alertasDiv').load('/base/_alertas');

                        } else {
                            $('#miModalContenido').html(result);
                            bindForm_EditarValor(dialog);
                        }
                    }
                });
            }
            return false;
        });
    }

</script>





<script type="text/javascript">

    $(function () {
        $.ajaxSetup({ cache: false });
        $("a[data-modal].CrearValor").on("click", function (e) {

            $('#miModalContenido').load(this.href, function () {
                $('#miModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                bindForm_CrearValor(this);
            });
            return false;
        });
    });

    function bindForm_CrearValor(dialog) {
        $('form', dialog).submit(function (e) {


            var validarok = false;


            validarok = $(this).validate().valid();

            if (validarok) {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {

                            /*
                            renderid = el id de donde vamos a renderizar el valor
                            valor
                            */
                            if (result.guardar) {

                                if ($('#' + result.renderID).length) {
                                    $('#' + result.renderID).html(result.texto); //  Campo que actualizara

                                    //$('<a>', {
                                    //    text: "<span class='fa fa-pencil'><span/>",
                                    //    href: result.url,
                                    //    'data-modal': "",
                                    //    'data-toggle': "tooltip",
                                    //    'class': 'btn btn-default btn-xs  pull-right EditarValor'
                                    //}).appendTo('#' + result.renderID);



                                }
                                else {
                                    window.location.reload();
                                    return false;
                                }
                            }

                            $('#miModal').modal('hide');

                            $('#alertasDiv').load('/base/_alertas');



                        } else {
                            $('#miModalContenido').html(result);
                            bindForm_CrearValor(dialog);
                        }
                    }
                });
            }
            return false;
        });
    }

</script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
